{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matyldamadej/code/topolino-app/pages/client-side.js\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nconst url = \"https://pokeapi.co/api/v2/pokemon?limit=151\";\nconst headers = {\n  'Cache-Control': 'no-cache'\n};\n\nconst ClientSide = () => {\n  const {\n    0: pokemon,\n    1: setPokemon\n  } = useState([]);\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      const response = await axios.get(url); //console.log(response);\n\n      const promises = response.data.results.map(result => {\n        return axios.get(result.url);\n      });\n      const responses = await Promise.all(promises);\n      console.log(responses);\n      const pokeData = responses.map(r => {\n        return {\n          name: r.data.name,\n          imgUrl: r.data.sprites.front_default\n        };\n      });\n      setPokemon(pokeData);\n    };\n\n    fetchPokemon();\n  }, []);\n  console.log(pokemon);\n  return pokemon.map(poke => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: poke.imgUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: poke.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, poke.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  });\n};\n\nexport default ClientSide;","map":{"version":3,"sources":["/Users/matyldamadej/code/topolino-app/pages/client-side.js"],"names":["axios","useState","useEffect","url","headers","ClientSide","pokemon","setPokemon","fetchPokemon","response","get","promises","data","results","map","result","responses","Promise","all","console","log","pokeData","r","name","imgUrl","sprites","front_default","poke"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAGA,MAAMC,GAAG,GAAE,6CAAX;AACA,MAAMC,OAAO,GAAG;AACZ,mBAAiB;AADL,CAAhB;;AAKA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,YAAY,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUP,GAAV,CAAvB,CAD6B,CAE7B;;AAGA,YAAMQ,QAAQ,GAAGF,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA2BC,MAAD,IAAY;AACnD,eAAOf,KAAK,CAACU,GAAN,CAAUK,MAAM,CAACZ,GAAjB,CAAP;AACH,OAFgB,CAAjB;AAGA,YAAMa,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYP,QAAZ,CAAxB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEA,YAAMK,QAAQ,GAAGL,SAAS,CAACF,GAAV,CAAcQ,CAAC,IAAI;AAChC,eAAO;AACHC,UAAAA,IAAI,EAAED,CAAC,CAACV,IAAF,CAAOW,IADV;AAEHC,UAAAA,MAAM,EAAEF,CAAC,CAACV,IAAF,CAAOa,OAAP,CAAeC;AAFpB,SAAP;AAKH,OANgB,CAAjB;AAQAnB,MAAAA,UAAU,CAACc,QAAD,CAAV;AACH,KApBD;;AAqBAb,IAAAA,YAAY;AAEf,GAxBQ,EAwBN,EAxBM,CAAT;AAyBAW,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AAEA,SAAOA,OAAO,CAACQ,GAAR,CAAYa,IAAI,IAAI;AACvB,wBACI;AAAA,8BACE;AAAK,QAAA,GAAG,EAAGA,IAAI,CAACH;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEI;AAAA,kBAAIG,IAAI,CAACJ;AAAT;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,OAAWI,IAAI,CAACJ,IAAhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARM,CAAP;AASH,CAtCD;;AAwCA,eAAelB,UAAf","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\n\nconst url =\"https://pokeapi.co/api/v2/pokemon?limit=151\";\nconst headers = {\n    'Cache-Control': 'no-cache'\n}\n\n\nconst ClientSide = () => {\n    const [pokemon, setPokemon] = useState([]);\n    useEffect(() => {\n        const fetchPokemon = async () => {\n            const response = await axios.get(url);\n            //console.log(response);\n\n\n            const promises = response.data.results.map((result) => {\n                return axios.get(result.url);\n            });\n            const responses = await Promise.all(promises)\n            console.log(responses);\n            \n            const pokeData = responses.map(r => {\n                return { \n                    name: r.data.name, \n                    imgUrl: r.data.sprites.front_default,\n\n                };\n            });\n\n            setPokemon(pokeData)\n        };\n        fetchPokemon();\n\n    }, []);\n    console.log(pokemon);\n\n    return pokemon.map(poke => {\n        return (\n            <div key ={poke.name}>\n              <img src={ poke.imgUrl } />\n                <p>{poke.name}</p>\n                <hr/>\n            </div>\n        )\n    })\n};\n\nexport default ClientSide;"]},"metadata":{},"sourceType":"module"}