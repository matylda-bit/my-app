{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matyldamadej/code/topolino-app/pages/client-side.js\";\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nconst url = 'https://pokeapi.co/api/v2/pokemon?limit=151';\nconst headers = {\n  'Cache-Control': 'no-cache'\n};\n\nconst ClientSide = () => {\n  const {\n    0: pokemon,\n    1: setPokemon\n  } = useState([]);\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      const response = await axios.get(url, {\n        headers\n      }); // console.log(response);\n\n      const promises = response.data.results.map(result => {\n        return axios.get(result.url, {\n          headers\n        });\n      });\n      const responses = await Promise.all(promises);\n      console.log(responses);\n      const pokeData = responses.map(r => {\n        return {\n          name: r.data.name,\n          imgUrl: r.data.sprites.front_default\n        };\n      });\n      setPokemon(pokeData);\n    };\n\n    fetchPokemon();\n  }, []);\n  console.log(pokemon);\n  return pokemon.map(poke => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: poke.imgUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: poke.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, poke.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  });\n};\n\nexport const getStaticProps = async () => {\n  return {\n    props: {\n      jon: 'rules'\n    }\n  };\n};\nexport default ClientSide;","map":{"version":3,"sources":["/Users/matyldamadej/code/topolino-app/pages/client-side.js"],"names":["axios","useState","useEffect","url","headers","ClientSide","pokemon","setPokemon","fetchPokemon","response","get","promises","data","results","map","result","responses","Promise","all","console","log","pokeData","r","name","imgUrl","sprites","front_default","poke","getStaticProps","props","jon"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,MAAMC,GAAG,GAAG,6CAAZ;AACA,MAAMC,OAAO,GAAG;AACd,mBAAiB;AADH,CAAhB;;AAIA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,YAAY,GAAG,YAAY;AAC/B,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUP,GAAV,EAAe;AAAEC,QAAAA;AAAF,OAAf,CAAvB,CAD+B,CAE/B;;AACA,YAAMO,QAAQ,GAAGF,QAAQ,CAACG,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA2BC,MAAD,IAAY;AACrD,eAAOf,KAAK,CAACU,GAAN,CAAUK,MAAM,CAACZ,GAAjB,EAAsB;AAAEC,UAAAA;AAAF,SAAtB,CAAP;AACD,OAFgB,CAAjB;AAGA,YAAMY,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYP,QAAZ,CAAxB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,YAAMK,QAAQ,GAAGL,SAAS,CAACF,GAAV,CAAcQ,CAAC,IAAI;AAClC,eAAO;AACLC,UAAAA,IAAI,EAAED,CAAC,CAACV,IAAF,CAAOW,IADR;AAELC,UAAAA,MAAM,EAAEF,CAAC,CAACV,IAAF,CAAOa,OAAP,CAAeC;AAFlB,SAAP;AAKD,OANgB,CAAjB;AAQAnB,MAAAA,UAAU,CAACc,QAAD,CAAV;AACD,KAjBD;;AAkBAb,IAAAA,YAAY;AACb,GApBQ,EAoBN,EApBM,CAAT;AAqBAW,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AAEA,SAAOA,OAAO,CAACQ,GAAR,CAAYa,IAAI,IAAI;AACzB,wBACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACH;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIG,IAAI,CAACJ;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAAUI,IAAI,CAACJ,IAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARM,CAAP;AASD,CAlCD;;AAoCA,OAAO,MAAMK,cAAc,GAAG,YAAY;AAC1C,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,GAAG,EAAE;AADA;AADF,GAAP;AAMC,CAPM;AASP,eAAezB,UAAf","sourcesContent":["import axios from 'axios'\nimport { useState, useEffect } from 'react'\n\nconst url = 'https://pokeapi.co/api/v2/pokemon?limit=151'\nconst headers = {\n  'Cache-Control': 'no-cache'\n}\n\nconst ClientSide = () => {\n  const [pokemon, setPokemon] = useState([])\n  useEffect(() => {\n    const fetchPokemon = async () => {\n      const response = await axios.get(url, { headers })\n      // console.log(response);\n      const promises = response.data.results.map((result) => {\n        return axios.get(result.url, { headers })\n      })\n      const responses = await Promise.all(promises)\n      console.log(responses)\n      const pokeData = responses.map(r => {\n        return {\n          name: r.data.name,\n          imgUrl: r.data.sprites.front_default\n\n        }\n      })\n\n      setPokemon(pokeData)\n    }\n    fetchPokemon()\n  }, [])\n  console.log(pokemon)\n\n  return pokemon.map(poke => {\n    return (\n      <div key={poke.name}>\n        <img src={poke.imgUrl} />\n        <p>{poke.name}</p>\n        <hr />\n      </div>\n    )\n  })\n}\n\nexport const getStaticProps = async () => {\nreturn { \n  props: {\n    jon: 'rules'\n    \n  }\n}\n}\n\nexport default ClientSide\n"]},"metadata":{},"sourceType":"module"}