{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nvar url = \"https://pokeapi.co/api/v2/pokemon?limit=151\";\n\nvar ClientSide = function ClientSide() {\n  _s();\n\n  var _useState = useState([]),\n      pokemon = _useState[0],\n      setPokemon = _useState[1];\n\n  useEffect(function () {\n    var fetchPokemon = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, promises, responses, pokeData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(url);\n\n              case 2:\n                response = _context.sent;\n                //console.log(response);\n                promises = response.data.results.map(function (result) {\n                  return axios.get(result.url);\n                });\n                _context.next = 6;\n                return Promise.all(promises);\n\n              case 6:\n                responses = _context.sent;\n                console.log(responses);\n                pokeData = responses.map(function (r) {\n                  return {\n                    name: r.data.name,\n                    imgUrl: r.data.sprites.front_default\n                  };\n                });\n                setPokemon(pokeData);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchPokemon() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchPokemon();\n  }, []);\n  console.log(pokemon);\n  return pokemon.map(function (poke) {\n    return poke;\n  });\n};\n\n_s(ClientSide, \"4D0jkhGq0ZINAQVoOiMhL4+r3a8=\");\n\n_c = ClientSide;\nexport default ClientSide;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientSide\");","map":{"version":3,"sources":["/Users/matyldamadej/code/topolino-app/pages/client-side.js"],"names":["axios","useState","useEffect","url","ClientSide","pokemon","setPokemon","fetchPokemon","get","response","promises","data","results","map","result","Promise","all","responses","console","log","pokeData","r","name","imgUrl","sprites","front_default","poke"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAGA,IAAMC,GAAG,GAAE,6CAAX;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,kBACSH,QAAQ,CAAC,EAAD,CADjB;AAAA,MACdI,OADc;AAAA,MACLC,UADK;;AAErBJ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMK,YAAY;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACMP,KAAK,CAACQ,GAAN,CAAUL,GAAV,CADN;;AAAA;AACXM,gBAAAA,QADW;AAEjB;AAGMC,gBAAAA,QALW,GAKAD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0B,UAACC,MAAD,EAAY;AACnD,yBAAOd,KAAK,CAACQ,GAAN,CAAUM,MAAM,CAACX,GAAjB,CAAP;AACH,iBAFgB,CALA;AAAA;AAAA,uBAQOY,OAAO,CAACC,GAAR,CAAYN,QAAZ,CARP;;AAAA;AAQXO,gBAAAA,SARW;AASjBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEMG,gBAAAA,QAXW,GAWAH,SAAS,CAACJ,GAAV,CAAc,UAAAQ,CAAC,EAAI;AAChC,yBAAO;AACHC,oBAAAA,IAAI,EAAED,CAAC,CAACV,IAAF,CAAOW,IADV;AAEHC,oBAAAA,MAAM,EAAEF,CAAC,CAACV,IAAF,CAAOa,OAAP,CAAeC;AAFpB,mBAAP;AAKH,iBANgB,CAXA;AAmBjBnB,gBAAAA,UAAU,CAACc,QAAD,CAAV;;AAnBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAZb,YAAY;AAAA;AAAA;AAAA,OAAlB;;AAqBAA,IAAAA,YAAY;AAEf,GAxBQ,EAwBN,EAxBM,CAAT;AAyBAW,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AAEA,SAAOA,OAAO,CAACQ,GAAR,CAAY,UAAAa,IAAI,EAAI;AACvB,WAAQA,IAAR;AACH,GAFM,CAAP;AAGH,CAhCD;;GAAMtB,U;;KAAAA,U;AAkCN,eAAeA,UAAf","sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\n\nconst url =\"https://pokeapi.co/api/v2/pokemon?limit=151\";\n\n\nconst ClientSide = () => {\n    const [pokemon, setPokemon] = useState([]);\n    useEffect(() => {\n        const fetchPokemon = async () => {\n            const response = await axios.get(url);\n            //console.log(response);\n\n\n            const promises = response.data.results.map((result) => {\n                return axios.get(result.url);\n            });\n            const responses = await Promise.all(promises)\n            console.log(responses);\n            \n            const pokeData = responses.map(r => {\n                return { \n                    name: r.data.name, \n                    imgUrl: r.data.sprites.front_default,\n\n                };\n            });\n\n            setPokemon(pokeData)\n        };\n        fetchPokemon();\n\n    }, []);\n    console.log(pokemon);\n\n    return pokemon.map(poke => {\n        return (poke)\n    })\n};\n\nexport default ClientSide;"]},"metadata":{},"sourceType":"module"}